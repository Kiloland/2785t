BYTE code tTX_HDCP_KEY_AKSV[] =
{
    0x1E, 0xC8, 0x42, 0xDD, 0xD9,
};

BYTE code tTX_HDCP_KEY_TABLE[] =
{
    0x3f, 0x05, 0x18, 0x49, 0x2d, 0x22, 0x01, 0x6e,    // Key0
    0x48, 0x59, 0x08, 0x26, 0x6d, 0x3a, 0x70, 0x05,    // Key1
    0x7f, 0x1b, 0x5c, 0x6a, 0x5d, 0x5d, 0x40, 0x25,    // Key2
    0x65, 0x54, 0x71, 0x0b, 0x13, 0x25, 0x70, 0x57,    // Key3
    0x3d, 0x72, 0x38, 0x7c, 0x1d, 0x01, 0x76, 0x5b,    // Key4
    0x0d, 0x6d, 0x4d, 0x70, 0x13, 0x2d, 0x65, 0x78,    // Key5
    0x4e, 0x50, 0x67, 0x71, 0x25, 0x6f, 0x03, 0x74,    // Key6
    0x07, 0x3a, 0x11, 0x0e, 0x66, 0x7d, 0x10, 0x6a,    // Key7
    0x4e, 0x3b, 0x5c, 0x45, 0x25, 0x2c, 0x7f, 0x32,    // Key8
    0x7d, 0x58, 0x74, 0x6a, 0x66, 0x35, 0x51, 0x09,    // Key9
    0x26, 0x10, 0x77, 0x1f, 0x53, 0x78, 0x49, 0x3c,    // Key10
    0x49, 0x34, 0x4c, 0x5d, 0x27, 0x4b, 0x40, 0x5b,    // Key11
    0x18, 0x08, 0x79, 0x50, 0x46, 0x2d, 0x16, 0x67,    // Key12
    0x20, 0x4f, 0x6c, 0x15, 0x44, 0x4f, 0x0e, 0x54,    // Key13
    0x47, 0x1e, 0x08, 0x7e, 0x08, 0x50, 0x45, 0x66,    // Key14
    0x18, 0x0e, 0x5b, 0x06, 0x33, 0x24, 0x5c, 0x0f,    // Key15
    0x33, 0x08, 0x1f, 0x6c, 0x13, 0x41, 0x11, 0x00,    // Key16
    0x6a, 0x3f, 0x33, 0x2a, 0x35, 0x77, 0x48, 0x76,    // Key17
    0x18, 0x6e, 0x62, 0x57, 0x70, 0x4f, 0x4b, 0x2c,    // Key18
    0x4a, 0x74, 0x16, 0x79, 0x75, 0x52, 0x68, 0x5e,    // Key19
    0x3d, 0x0d, 0x60, 0x3d, 0x6d, 0x7e, 0x46, 0x03,    // Key20
    0x57, 0x7b, 0x17, 0x6e, 0x33, 0x37, 0x45, 0x44,    // Key21
    0x37, 0x2c, 0x58, 0x71, 0x2c, 0x2c, 0x2b, 0x25,    // Key22
    0x28, 0x27, 0x00, 0x27, 0x76, 0x64, 0x0c, 0x55,    // Key23
    0x05, 0x0c, 0x23, 0x6c, 0x4b, 0x68, 0x76, 0x03,    // Key24
    0x01, 0x52, 0x51, 0x51, 0x4a, 0x6a, 0x22, 0x08,    // Key25
    0x7d, 0x50, 0x58, 0x4c, 0x27, 0x66, 0x04, 0x55,    // Key26
    0x50, 0x74, 0x51, 0x08, 0x78, 0x31, 0x36, 0x6d,    // Key27
    0x1d, 0x6d, 0x5c, 0x1b, 0x64, 0x32, 0x01, 0x50,    // Key28
    0x4a, 0x6b, 0x09, 0x68, 0x15, 0x1a, 0x21, 0x7d,    // Key29
    0x55, 0x36, 0x2b, 0x18, 0x55, 0x13, 0x0f, 0x3d,    // Key30
    0x21, 0x48, 0x55, 0x14, 0x31, 0x20, 0x7f, 0x3c,    // Key31
    0x21, 0x00, 0x43, 0x4e, 0x3f, 0x46, 0x30, 0x56,    // Key32
    0x4a, 0x4c, 0x3d, 0x7d, 0x50, 0x52, 0x58, 0x7f,    // Key33
    0x4e, 0x0d, 0x70, 0x37, 0x1a, 0x27, 0x3a, 0x43,    // Key34
    0x33, 0x79, 0x49, 0x03, 0x21, 0x3f, 0x07, 0x54,    // Key35
    0x33, 0x17, 0x4b, 0x67, 0x73, 0x26, 0x1e, 0x2b,    // Key36
    0x16, 0x6b, 0x0d, 0x08, 0x3e, 0x62, 0x76, 0x51,    // Key37
    0x36, 0x2f, 0x74, 0x62, 0x52, 0x15, 0x69, 0x61,    // Key38
    0x10, 0x49, 0x0f, 0x25, 0x3c, 0x6a, 0x08, 0x28,    // Key39
};

#if((_DP_HDCP_2_2_SUPPORT == _ON) && (_DP_TX_SUPPORT == _ON))
BYTE code tTX_HDCP2_DCP_LLC_N[] = // 384 bytes
{
#if(_HDCP_2_2_TX_ERRATA_TEST_SUPPORT == _ON)
    0xA2, 0xC7, 0x55, 0x57, 0x54, 0xCB, 0xAA, 0xA7,
    0x7A, 0x27, 0x92, 0xC3, 0x1A, 0x6D, 0xC2, 0x31,
    0xCF, 0x12, 0xC2, 0x24, 0xBF, 0x89, 0x72, 0x46,
    0xA4, 0x8D, 0x20, 0x83, 0xB2, 0xDD, 0x04, 0xDA,
    0x7E, 0x01, 0xA9, 0x19, 0xEF, 0x7E, 0x8C, 0x47,
    0x54, 0xC8, 0x59, 0x72, 0x5C, 0x89, 0x60, 0x62,
    0x9F, 0x39, 0xD0, 0xE4, 0x80, 0xCA, 0xA8, 0xD4,
    0x1E, 0x91, 0xE3, 0x0E, 0x2C, 0x77, 0x55, 0x6D,
    0x58, 0xA8, 0x9E, 0x3E, 0xF2, 0xDA, 0x78, 0x3E,
    0xBA, 0xD1, 0x05, 0x37, 0x07, 0xF2, 0x88, 0x74,
    0x0C, 0xBC, 0xFB, 0x68, 0xA4, 0x7A, 0x27, 0xAD,
    0x63, 0xA5, 0x1F, 0x67, 0xF1, 0x45, 0x85, 0x16,
    0x49, 0x8A, 0xE6, 0x34, 0x1C, 0x6E, 0x80, 0xF5,
    0xFF, 0x13, 0x72, 0x85, 0x5D, 0xC1, 0xDE, 0x5F,
    0x01, 0x86, 0x55, 0x86, 0x71, 0xE8, 0x10, 0x33,
    0x14, 0x70, 0x2A, 0x5F, 0x15, 0x7B, 0x5C, 0x65,
    0x3C, 0x46, 0x3A, 0x17, 0x79, 0xED, 0x54, 0x6A,
    0xA6, 0xC9, 0xDF, 0xEB, 0x2A, 0x81, 0x2A, 0x80,
    0x2A, 0x46, 0xA2, 0x06, 0xDB, 0xFD, 0xD5, 0xF3,
    0xCF, 0x74, 0xBB, 0x66, 0x56, 0x48, 0xD7, 0x7C,
    0x6A, 0x03, 0x14, 0x1E, 0x55, 0x56, 0xE4, 0xB6,
    0xFA, 0x38, 0x2B, 0x5D, 0xFB, 0x87, 0x9F, 0x9E,
    0x78, 0x21, 0x87, 0xC0, 0x0C, 0x63, 0x3E, 0x8D,
    0x0F, 0xE2, 0xA7, 0x19, 0x10, 0x9B, 0x15, 0xE1,
    0x11, 0x87, 0x49, 0x33, 0x49, 0xB8, 0x66, 0x32,
    0x28, 0x7C, 0x87, 0xF5, 0xD2, 0x2E, 0xC5, 0xF3,
    0x66, 0x2F, 0x79, 0xEF, 0x40, 0x5A, 0xD4, 0x14,
    0x85, 0x74, 0x5F, 0x06, 0x43, 0x50, 0xCD, 0xDE,
    0x84, 0xE7, 0x3C, 0x7D, 0x8E, 0x8A, 0x49, 0xCC,
    0x5A, 0xCF, 0x73, 0xA1, 0x8A, 0x13, 0xFF, 0x37,
    0x13, 0x3D, 0xAD, 0x57, 0xD8, 0x51, 0x22, 0xD6,
    0x32, 0x1F, 0xC0, 0x68, 0x4C, 0xA0, 0x5B, 0xDD,
    0x5F, 0x78, 0xC8, 0x9F, 0x2D, 0x3A, 0xA2, 0xB8,
    0x1E, 0x4A, 0xE4, 0x08, 0x55, 0x64, 0x05, 0xE6,
    0x94, 0xFB, 0xEB, 0x03, 0x6A, 0x0A, 0xBE, 0x83,
    0x18, 0x94, 0xD4, 0xB6, 0xC3, 0xF2, 0x58, 0x9C,
    0x7A, 0x24, 0xDD, 0xD1, 0x3A, 0xB7, 0x3A, 0xB0,
    0xBB, 0xE5, 0xD1, 0x28, 0xAB, 0xAD, 0x24, 0x54,
    0x72, 0x0E, 0x76, 0xD2, 0x89, 0x32, 0xEA, 0x46,
    0xD3, 0x78, 0xD0, 0xA9, 0x67, 0x78, 0xC1, 0x2D,
    0x18, 0xB0, 0x33, 0xDE, 0xDB, 0x27, 0xCC, 0xB0,
    0x7C, 0xC9, 0xA4, 0xBD, 0xDF, 0x2B, 0x64, 0x10,
    0x32, 0x44, 0x06, 0x81, 0x21, 0xB3, 0xBA, 0xCF,
    0x33, 0x85, 0x49, 0x1E, 0x86, 0x4C, 0xBD, 0xF2,
    0x3D, 0x34, 0xEF, 0xD6, 0x23, 0x7A, 0x9F, 0x2C,
    0xDA, 0x84, 0xF0, 0x83, 0x83, 0x71, 0x7D, 0xDA,
    0x6E, 0x44, 0x96, 0xCD, 0x1D, 0x05, 0xDE, 0x30,
    0xF6, 0x1E, 0x2F, 0x9C, 0x99, 0x9C, 0x60, 0x07,
#else
    0xB0, 0xE9, 0xAA, 0x45, 0xF1, 0x29, 0xBA, 0x0A,
    0x1C, 0xBE, 0x17, 0x57, 0x28, 0xEB, 0x2B, 0x4E,
    0x8F, 0xD0, 0xC0, 0x6A, 0xAD, 0x79, 0x98, 0x0F,
    0x8D, 0x43, 0x8D, 0x47, 0x04, 0xB8, 0x2B, 0xF4,
    0x15, 0x21, 0x56, 0x19, 0x01, 0x40, 0x01, 0x3B,
    0xD0, 0x91, 0x90, 0x62, 0x9E, 0x89, 0xC2, 0x27,
    0x8E, 0xCF, 0xB6, 0xDB, 0xCE, 0x3F, 0x72, 0x10,
    0x50, 0x93, 0x8C, 0x23, 0x29, 0x83, 0x7B, 0x80,
    0x64, 0xA7, 0x59, 0xE8, 0x61, 0x67, 0x4C, 0xBC,
    0xD8, 0x58, 0xB8, 0xF1, 0xD4, 0xF8, 0x2C, 0x37,
    0x98, 0x16, 0x26, 0x0E, 0x4E, 0xF9, 0x4E, 0xEE,
    0x24, 0xDE, 0xCC, 0xD1, 0x4B, 0x4B, 0xC5, 0x06,
    0x7A, 0xFB, 0x49, 0x65, 0xE6, 0xC0, 0x00, 0x83,
    0x48, 0x1E, 0x8E, 0x42, 0x2A, 0x53, 0xA0, 0xF5,
    0x37, 0x29, 0x2B, 0x5A, 0xF9, 0x73, 0xC5, 0x9A,
    0xA1, 0xB5, 0xB5, 0x74, 0x7C, 0x06, 0xDC, 0x7B,
    0x7C, 0xDC, 0x6C, 0x6E, 0x82, 0x6B, 0x49, 0x88,
    0xD4, 0x1B, 0x25, 0xE0, 0xEE, 0xD1, 0x79, 0xBD,
    0x39, 0x85, 0xFA, 0x4F, 0x25, 0xEC, 0x70, 0x19,
    0x23, 0xC1, 0xB9, 0xA6, 0xD9, 0x7E, 0x3E, 0xDA,
    0x48, 0xA9, 0x58, 0xE3, 0x18, 0x14, 0x1E, 0x9F,
    0x30, 0x7F, 0x4C, 0xA8, 0xAE, 0x53, 0x22, 0x66,
    0x2B, 0xBE, 0x24, 0xCB, 0x47, 0x66, 0xFC, 0x83,
    0xCF, 0x5C, 0x2D, 0x1E, 0x3A, 0xAB, 0xAB, 0x06,
    0xBE, 0x05, 0xAA, 0x1A, 0x9B, 0x2D, 0xB7, 0xA6,
    0x54, 0xF3, 0x63, 0x2B, 0x97, 0xBF, 0x93, 0xBE,
    0xC1, 0xAF, 0x21, 0x39, 0x49, 0x0C, 0xE9, 0x31,
    0x90, 0xCC, 0xC2, 0xBB, 0x3C, 0x02, 0xC4, 0xE2,
    0xBD, 0xBD, 0x2F, 0x84, 0x63, 0x9B, 0xD2, 0xDD,
    0x78, 0x3E, 0x90, 0xC6, 0xC5, 0xAC, 0x16, 0x77,
    0x2E, 0x69, 0x6C, 0x77, 0xFD, 0xED, 0x8A, 0x4D,
    0x6A, 0x8C, 0xA3, 0xA9, 0x25, 0x6C, 0x21, 0xFD,
    0xB2, 0x94, 0x0C, 0x84, 0xAA, 0x07, 0x29, 0x26,
    0x46, 0xF7, 0x9B, 0x3A, 0x19, 0x87, 0xE0, 0x9F,
    0xEB, 0x30, 0xA8, 0xF5, 0x64, 0xEB, 0x07, 0xF1,
    0xE9, 0xDB, 0xF9, 0xAF, 0x2C, 0x8B, 0x69, 0x7E,
    0x2E, 0x67, 0x39, 0x3F, 0xF3, 0xA6, 0xE5, 0xCD,
    0xDA, 0x24, 0x9B, 0xA2, 0x78, 0x72, 0xF0, 0xA2,
    0x27, 0xC3, 0xE0, 0x25, 0xB4, 0xA1, 0x04, 0x6A,
    0x59, 0x80, 0x27, 0xB5, 0xDA, 0xB4, 0xB4, 0x53,
    0x97, 0x3B, 0x28, 0x99, 0xAC, 0xF4, 0x96, 0x27,
    0x0F, 0x7F, 0x30, 0x0C, 0x4A, 0xAF, 0xCB, 0x9E,
    0xD8, 0x71, 0x28, 0x24, 0x3E, 0xBC, 0x35, 0x15,
    0xBE, 0x13, 0xEB, 0xAF, 0x43, 0x01, 0xBD, 0x61,
    0x24, 0x54, 0x34, 0x9F, 0x73, 0x3E, 0xB5, 0x10,
    0x9F, 0xC9, 0xFC, 0x80, 0xE8, 0x4D, 0xE3, 0x32,
    0x96, 0x8F, 0x88, 0x10, 0x23, 0x25, 0xF3, 0xD3,
    0x3E, 0x6E, 0x6D, 0xBB, 0xDC, 0x29, 0x66, 0xEB,
#endif
};

BYTE code tTX_HDCP2_EKEY[] = // 128 bytes (Be encrypted)
{
    0x07, 0x0B, 0x6B, 0x8A, 0x18, 0x0A, 0xEE, 0x41,
    0xDE, 0x41, 0x83, 0x25, 0x23, 0x8A, 0x12, 0x3F,
    0x35, 0x65, 0xB3, 0x07, 0x89, 0x48, 0x28, 0x5E,
    0x6C, 0x49, 0xA6, 0x48, 0x0E, 0x2A, 0x52, 0x1F,
    0x32, 0x9A, 0x7B, 0x80, 0x51, 0x08, 0x27, 0x81,
    0x0D, 0x7E, 0xFD, 0x1E, 0xA5, 0x1E, 0xFA, 0xC0,
    0xC3, 0x5F, 0xB6, 0xBA, 0xB1, 0xE6, 0xA9, 0x98,
    0x7D, 0x4B, 0xB4, 0xF2, 0x8A, 0x07, 0xD2, 0xC1,
    0x7D, 0x8E, 0xA5, 0x59, 0xA2, 0x56, 0xAF, 0x80,
    0xA7, 0x5F, 0x20, 0x23, 0x3F, 0x96, 0xDE, 0x8F,
    0x5A, 0xBF, 0x9C, 0x7B, 0x3A, 0x22, 0x3A, 0x22,
    0xD9, 0x42, 0x18, 0xF6, 0xDB, 0x65, 0x33, 0x76,
    0x1F, 0xC2, 0x5F, 0xBC, 0xBF, 0x56, 0x24, 0x16,
    0x7E, 0xDB, 0x27, 0x78, 0x8C, 0xFC, 0x64, 0x17,
    0xCD, 0x00, 0xD6, 0xB1, 0xF6, 0x71, 0x7A, 0xDC,
    0x30, 0xCB, 0xAA, 0xB8, 0x3E, 0x39, 0x64, 0xE9,
};

BYTE code tTX_HDCP2_RRMODN[] = // 384 bytes
{
#if(_HDCP_2_2_TX_ERRATA_TEST_SUPPORT == _ON)
    0x95, 0xCC, 0x1B, 0x72, 0xDA, 0x8B, 0xC8, 0xF4,
    0xE4, 0x88, 0x48, 0x08, 0x40, 0xBD, 0x48, 0xFE,
    0xF4, 0xE3, 0xDB, 0x41, 0x63, 0x41, 0x66, 0x06,
    0xBF, 0xAA, 0xB9, 0xC4, 0x3B, 0x7A, 0x6E, 0xCC,
    0x3B, 0xAF, 0xBB, 0x41, 0x83, 0xBE, 0x1A, 0x6A,
    0x5D, 0xAF, 0x48, 0x52, 0x72, 0x11, 0xF8, 0xDC,
    0x7F, 0xF0, 0xBD, 0xA5, 0x72, 0x47, 0x55, 0xEB,
    0x43, 0x98, 0xCB, 0x07, 0x3A, 0xDD, 0xE3, 0x3B,
    0x40, 0xFD, 0x4C, 0x65, 0x86, 0x2B, 0x64, 0x97,
    0x86, 0xCB, 0xD0, 0x4A, 0x4A, 0x9E, 0x84, 0x73,
    0x85, 0xEB, 0xE2, 0x9C, 0xDD, 0x88, 0xF6, 0xF5,
    0xE7, 0xEC, 0x1D, 0xDC, 0xD9, 0x93, 0x04, 0xE2,
    0x74, 0x29, 0x8E, 0x5B, 0xF7, 0x1D, 0x51, 0x6F,
    0xEA, 0xC5, 0x47, 0x98, 0x41, 0xE4, 0x24, 0xB7,
    0x9B, 0xB7, 0x0C, 0x5F, 0x2F, 0x86, 0x09, 0x6B,
    0x19, 0xC9, 0xBB, 0x60, 0x8E, 0xFC, 0xB3, 0x8F,
    0xAF, 0x23, 0x45, 0xB5, 0x54, 0x06, 0x39, 0x9F,
    0x93, 0x35, 0x90, 0x32, 0x55, 0x1B, 0xF7, 0xCF,
    0xC7, 0xDD, 0xBE, 0xB5, 0xF8, 0x97, 0xF4, 0x5C,
    0x05, 0x64, 0x81, 0x6F, 0x0F, 0x15, 0x97, 0x23,
    0x5E, 0xD6, 0x6D, 0x22, 0xB3, 0x45, 0x6E, 0xFA,
    0x55, 0x5B, 0x4D, 0xBC, 0x48, 0xA9, 0xEE, 0x6B,
    0x93, 0xF4, 0x34, 0x4A, 0x4A, 0xF2, 0x9D, 0x09,
    0x90, 0x4B, 0xD8, 0xAC, 0x82, 0x9E, 0x5E, 0xFF,
    0xB1, 0xC8, 0x12, 0x9C, 0x46, 0xAC, 0x9E, 0xED,
    0x98, 0x08, 0xFE, 0x11, 0xCF, 0x38, 0x7A, 0xFA,
    0x58, 0x57, 0xED, 0x44, 0xF8, 0x5B, 0xA2, 0x51,
    0x69, 0x8F, 0x23, 0x13, 0x71, 0xE8, 0x68, 0xAC,
    0xF0, 0x8B, 0xEF, 0x69, 0xAA, 0x03, 0x82, 0x71,
    0x1A, 0xE8, 0x4A, 0xBA, 0x30, 0x81, 0x11, 0x51,
    0x5B, 0x8B, 0x55, 0xFD, 0xE1, 0xB7, 0xB7, 0x8A,
    0x5E, 0x2D, 0x22, 0x4D, 0x29, 0xA4, 0x94, 0x96,
    0xFE, 0x40, 0x9B, 0x26, 0x69, 0x69, 0x41, 0x32,
    0xC5, 0x64, 0xE5, 0x3F, 0x14, 0x3E, 0x53, 0x80,
    0x9F, 0x5A, 0x6D, 0x6C, 0xEF, 0x5F, 0x15, 0xAF,
    0xE9, 0x42, 0x49, 0xB5, 0x39, 0x1B, 0x83, 0xE0,
    0x14, 0x4B, 0xDE, 0xA3, 0xF2, 0xC0, 0xCC, 0x33,
    0x1F, 0xE6, 0xE3, 0x1F, 0xF8, 0xF5, 0x4C, 0x87,
    0x7B, 0x12, 0x8B, 0xE9, 0x4C, 0xA6, 0xEF, 0x2A,
    0xFD, 0x79, 0xB3, 0x6D, 0x8E, 0xA7, 0xF6, 0x07,
    0x3A, 0x33, 0x9B, 0x4B, 0x1A, 0x11, 0x3F, 0x6B,
    0x10, 0x66, 0x09, 0xC8, 0xE2, 0x12, 0x61, 0x9B,
    0x53, 0xB4, 0x3C, 0x1D, 0x8C, 0x16, 0x3E, 0xCB,
    0x7D, 0xD9, 0x1A, 0x3A, 0x0A, 0x0E, 0x82, 0xD2,
    0x3C, 0x63, 0xAD, 0x55, 0x8C, 0x24, 0x88, 0x6A,
    0x9A, 0x84, 0xFF, 0xBD, 0x35, 0x83, 0x90, 0xF2,
    0x01, 0xB4, 0x73, 0x59, 0x12, 0x26, 0x83, 0xB1,
    0xFC, 0x43, 0x86, 0x6E, 0x06, 0xBE, 0x1A, 0x35,
#else
    0xAB, 0x75, 0xB5, 0x96, 0x35, 0x88, 0x04, 0xBE,
    0xC0, 0x1D, 0x06, 0x8A, 0x8B, 0xFB, 0x2E, 0xC8,
    0x90, 0x7F, 0xA6, 0xE8, 0xF3, 0x90, 0x52, 0x30,
    0xCE, 0x32, 0x54, 0x9F, 0x2C, 0xC4, 0xB3, 0x7F,
    0x5E, 0xF1, 0xCD, 0x7D, 0xA1, 0xEC, 0xC8, 0xEB,
    0x8B, 0xB8, 0x0B, 0x8D, 0x7D, 0x24, 0xD7, 0xF6,
    0x3E, 0xAD, 0x58, 0x19, 0x7C, 0x47, 0x2A, 0xCD,
    0x1E, 0x5B, 0x15, 0x6B, 0xAB, 0xD5, 0xC0, 0x6B,
    0x7A, 0xA1, 0x2A, 0x94, 0xCF, 0x43, 0x52, 0xC3,
    0xE0, 0xC3, 0x64, 0x95, 0xC2, 0x90, 0xFF, 0xB5,
    0x27, 0x84, 0x4E, 0xA4, 0xBF, 0x18, 0x63, 0x37,
    0xDD, 0x56, 0x32, 0x87, 0x32, 0x7B, 0xA2, 0x56,
    0x95, 0x69, 0x8E, 0xC4, 0xB8, 0x78, 0x51, 0x90,
    0xBA, 0xC0, 0xE1, 0xFD, 0x3D, 0x12, 0xDD, 0xDB,
    0x7D, 0x5B, 0x6B, 0xCB, 0x0A, 0x06, 0xD5, 0x2A,
    0x4C, 0x42, 0xBB, 0xFC, 0x5D, 0x0E, 0xC4, 0x55,
    0x48, 0xB4, 0xD1, 0xF0, 0x77, 0x8E, 0xBA, 0xC6,
    0x1B, 0xE9, 0x2B, 0x9D, 0xD0, 0x4D, 0x2E, 0x64,
    0x7D, 0x32, 0xFE, 0xD9, 0x88, 0x68, 0x32, 0x21,
    0x6D, 0x68, 0xFD, 0x8A, 0xE3, 0xCD, 0xCD, 0x0E,
    0xF7, 0xD4, 0xA8, 0x34, 0x68, 0x77, 0x0C, 0xB2,
    0x8E, 0x91, 0x74, 0x33, 0x78, 0xF7, 0x70, 0x67,
    0x85, 0xD8, 0x47, 0x26, 0xBE, 0x79, 0xD5, 0x44,
    0xFB, 0x1E, 0x25, 0x53, 0xBE, 0x64, 0x9B, 0xAC,
    0xE1, 0xF7, 0x61, 0x8F, 0x4F, 0xA5, 0xF5, 0x8A,
    0x9E, 0x35, 0xFE, 0x69, 0x24, 0x8E, 0x65, 0x84,
    0x15, 0x9C, 0x7C, 0x6E, 0xBD, 0xD3, 0x91, 0xE9,
    0x58, 0xF1, 0xF3, 0x64, 0x94, 0xB5, 0x0D, 0x5B,
    0x46, 0x21, 0x39, 0x89, 0x22, 0xD5, 0x61, 0xD4,
    0xE2, 0xEB, 0x80, 0x2F, 0x80, 0xF8, 0xE7, 0x73,
    0x39, 0xE2, 0x67, 0x5E, 0x28, 0x84, 0x68, 0xC6,
    0x02, 0xBD, 0xA8, 0xA6, 0x9D, 0xC1, 0xE1, 0xCF,
    0x69, 0xCF, 0xF9, 0x72, 0x10, 0x23, 0x3A, 0x11,
    0xFE, 0xEA, 0x35, 0xB7, 0x58, 0x0A, 0x11, 0x32,
    0x06, 0x30, 0xE0, 0x57, 0xDE, 0xCD, 0x7C, 0xB4,
    0xF9, 0xDF, 0x42, 0xB1, 0x06, 0x84, 0x4C, 0xE5,
    0x24, 0xD8, 0x21, 0x52, 0xBB, 0xA1, 0xE7, 0x68,
    0xE6, 0x1B, 0xF5, 0xA2, 0x09, 0x67, 0xC5, 0xE3,
    0x75, 0x0F, 0x33, 0x45, 0x09, 0xC4, 0x57, 0xEC,
    0x9A, 0x4A, 0xF0, 0x22, 0x95, 0x1E, 0xFA, 0x44,
    0x43, 0x91, 0x9F, 0xF8, 0x70, 0xA6, 0xD8, 0xD2,
    0x51, 0x22, 0x68, 0x3E, 0x14, 0x6D, 0xFA, 0x23,
    0x41, 0x04, 0x13, 0x18, 0x77, 0x34, 0x76, 0xD9,
    0x24, 0x5D, 0x0C, 0x64, 0x6C, 0xFC, 0xA8, 0x60,
    0x0F, 0xB4, 0xB4, 0xA5, 0xD8, 0xF3, 0x62, 0x78,
    0x66, 0x04, 0xEF, 0x6D, 0xBC, 0x34, 0x12, 0x8B,
    0x5F, 0x60, 0x49, 0x12, 0xAD, 0xB6, 0x47, 0xFD,
    0xFC, 0xD2, 0xF0, 0x39, 0x25, 0x44, 0x64, 0x64,
#endif
};

BYTE code tTX_HDCP2_NPINV[] =
{
#if(_HDCP_2_2_TX_ERRATA_TEST_SUPPORT == _ON)
    0x96, 0xCE, 0xF2, 0x49,
#else
    0x30, 0x5C, 0xEE, 0x3D,
#endif
};
#endif
